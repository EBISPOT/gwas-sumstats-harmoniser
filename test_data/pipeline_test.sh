#!/usr/bin/env bash
#
# Smoke test for gwas-sumstats-harmoniser
#
# Purpose:
#   - figures out which ref (tag/branch) you want to test and picks the matching container tag
#   - Quickly check that the Nextflow pipeline runs on the tiny test dataset
#   - Confirm the Singularity/Apptainer image is usable
#
# Requirements on the local machine:
#   - nextflow in $PATH
#   - singularity
#   - ~3 GB memory available
#
# Usage:
#   ./scripts/local_smoke_test.sh
#       -> tests current checkout (no -r) using container tag "latest"
#
#   ./scripts/local_smoke_test.sh v1.0.11
#       -> tests ref "v1.0.11" using container tag "v1.0.11"
#
#   ./scripts/local_smoke_test.sh PRE_GWAS-SSF docker_tag
#       -> tests ref "PRE_GWAS-SSF" using container tag "docker_tag"
#
# Notes:
#   The argument you pass is forwarded to `nextflow run ... -r <REF>`,
#   which tells Nextflow to fetch that tag/branch from the repo.
#

set -euo pipefail

########################################
# 1. figure out ref and image version
########################################

REF="${1:-}"          # optional: branch or tag
IMAGE_TAG_OVERRIDE="${2:-}"  # optional: explicit docker tag

if [[ -z "$REF" ]]; then
    # Mode 0 args:
    #   current checkout, image tag = latest
    PIPELINE_REF=""          # means we won't pass -r
    IMAGE_TAG="latest"
    MODE_DESC="current checkout -> image :latest"
elif [[ -n "$REF" && -z "$IMAGE_TAG_OVERRIDE" ]]; then
    # Mode 1 arg:
    #   use REF both as pipeline ref and image tag
    PIPELINE_REF="$REF"
    IMAGE_TAG="$REF"
    MODE_DESC="ref \"$PIPELINE_REF\" -> image :$IMAGE_TAG"
else
    # Mode 2 args:
    #   ref is first arg, explicit docker tag is second arg
    PIPELINE_REF="$REF"
    IMAGE_TAG="$IMAGE_TAG_OVERRIDE"
    MODE_DESC="ref \"$PIPELINE_REF\" -> image :$IMAGE_TAG"
fi

########################################
# 2. report plan
########################################

echo "===================================================="
echo " GWAS Harmoniser smoke test"
echo "===================================================="
echo " Working directory : $(pwd)"
if [[ -z "$PIPELINE_REF" ]]; then
    echo " Pipeline ref      : (current checkout / no -r)"
else
    echo " Pipeline ref      : $PIPELINE_REF"
fi
echo " Container tag     : $IMAGE_TAG"
echo " Mode              : $MODE_DESC"
echo "===================================================="

########################################
# 3. sanity check tools
########################################

if ! command -v nextflow >/dev/null 2>&1; then
    echo "[ERROR] nextflow is not in PATH."
    exit 1
fi

if command -v singularity >/dev/null 2>&1; then
    CONTAINER_CMD="singularity"
elif command -v apptainer >/dev/null 2>&1; then
    CONTAINER_CMD="apptainer"
else
    echo "[ERROR] Neither singularity nor apptainer found in PATH."
    exit 1
fi

echo "[INFO] Using container runtime: $CONTAINER_CMD"
echo "[INFO] Nextflow version:"
nextflow -version || true
echo "===================================================="

########################################
# 4. write tiny override config
#
# We ONLY override the image tag (task.ext.docker_version etc).
# We assume your main nextflow.config already:
#   - defines process.ext.docker / ext.singularity
#   - sets `container = "\${task.ext.docker}\${task.ext.docker_version}"`
#   - defines the 'test' profile
########################################

TMP_CONFIG="$(mktemp nf-smoketest-${IMAGE_TAG}.config)"

cat > "$TMP_CONFIG" <<EOF
// Auto-generated by local_smoke_test.sh
// This file ONLY overrides container image version for smoke testing.
//
// Your main config should already set all other things (params, process resources,
// profiles like 'test', etc). We do not duplicate them here.

process {
    ext {
        docker               = 'ebispot/gwas-sumstats-harmoniser'
        singularity          = 'docker://ebispot/gwas-sumstats-harmoniser'
        docker_version       = ':${IMAGE_TAG}'
        singularity_version  = ':${IMAGE_TAG}'
    }
}
EOF

echo "[INFO] Wrote temp override config: $TMP_CONFIG"
echo "===================================================="

########################################
# 5. build Nextflow command
########################################

NF_CMD=( nextflow -c "$TMP_CONFIG" \
    run EBISPOT/gwas-sumstats-harmoniser \
    -r "$PIPELINE_REF" \
    -dsl2 \
    -profile test,singularity \
    -with-trace trace.txt \
    )

if [[ -n "$PIPELINE_REF" ]]; then
    NF_CMD+=( -r "$PIPELINE_REF" )
fi

echo "[INFO] Command to run:"
printf '  %q' "${NF_CMD[@]}"
echo
echo "===================================================="

########################################
# 6. run it
########################################

"${NF_CMD[@]}"

########################################
# 7. wrap up
########################################

echo "===================================================="
echo "[SUCCESS] Smoke test finished."
echo "Temp override config:"
echo "  $TMP_CONFIG"
echo "You can delete it when you're done."
echo "===================================================="