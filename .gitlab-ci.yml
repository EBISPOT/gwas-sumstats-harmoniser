image: docker:latest

stages:
  - build
  - deploy

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375
  CI_REGISTRY_IMAGE: ebispot/gwas-sumstats-harmoniser

build:
  stage: build
  script:
   - echo "$DOCKER_HUB_PASSWORD" > dhpw.txt
   - docker login -u "${DOCKER_HUB_USER}" --password-stdin < dhpw.txt docker.io
  # Conditionally use build cache from 'latest'
   - |
      if [ "$CI_COMMIT_BRANCH" != "PRE_GWAS-SSF" ]; then
        echo "Using build cache from :latest"
        docker pull "$CI_REGISTRY_IMAGE:latest" || true
        CACHE_FROM="--cache-from $CI_REGISTRY_IMAGE:latest"
      else
        echo  "Skipping :latest cache on PRE_GWAS-SSF"
        CACHE_FROM=""
      fi
   - docker build $CACHE_FROM -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
   - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
  only:
   - master
   - dev
   - PRE_GWAS-SSF

build_release:
  variables:
    GIT_STRATEGY: none
  stage: build
  script:
   - echo "$DOCKER_HUB_PASSWORD" > dhpw.txt
   - docker login -u "${DOCKER_HUB_USER}" --password-stdin < dhpw.txt
   - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" || true
   - |
      if git branch -r --contains "$CI_COMMIT_SHA" | grep -q "origin/PRE_GWAS-SSF"; then
        echo "Skipping :latest tag for internal release from PRE_GWAS-SSF"
      else
        echo "Tagging as latest"
        docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_IMAGE:latest"
      fi
    # Always push the version tag
   - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
   - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
  only:
   - tags
